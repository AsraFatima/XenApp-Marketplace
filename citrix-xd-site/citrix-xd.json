{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {

    "vhdStorage": {
      "type": "string",
      "metadata": {
        "description": "Name of the Storage Account (must already exist and house vhds currently used in place of gallery images). This has to be a uinique name, up to 24 chars, all lowercase."
      }
    },

    "vhdStorageGroup": {
      "type": "string",
      "metadata": {
        "description": "Group where storage exists"
      }
    },

    "publicDnsName": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
      }
    },

    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "Windows OS version for the VM, allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },

    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8"
      ],
      "metadata": {
        "description": "The size of the virtual machines"
      }
    },

    "domainName": {
      "type": "string",
      "defaultValue": "test.local",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator'"
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },

    "siteName": {
      "type": "string",
      "defaultValue": "TestSite",
      "metadata": {
        "description": "The name of the XenDesktop site"
      }
    },

    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Fully qualified domain name which will be used to connect to resources from outside. Must match certificate deployed to the Nestcaler."
      }
    },

    "encodedNetscalerLicense": {
      "type": "securestring",
      "metadata": {
        "description": "Base64 encoding of Netscaler license"
      }
    },

    "encodedCertificate": {
      "type": "securestring",
      "metadata": {
        "description": "Base64 encoding of certificate to be installed in Netscaler"
      }
    },

    "encodedCertificateKey": {
      "type": "securestring",
      "metadata": {
        "description": "Base64 encoding of certificate key to be installed in Netscaler"
      }
    },

    "encodedAuthorityCertificate1": {
      "type": "securestring",
      "metadata": {
        "description": "Base64 encoding of first authority certificate to be installed in Netscaler"
      }
    },

    "encodedAuthorityCertificate2": {
      "type": "securestring",
      "metadata": {
        "description": "Base64 encoding of second authority certificate to be installed in Netscaler"
      }
    }
  },

  "variables": {
	"artifactsLocation": "https://github.com/alexstoddard/azure-quickstart-templates/raw/master/citrix-xd-site",
    "artifactsLocationSasToken": "",

    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",

    "userImageStorageContainerName": "images",

    "userDdcImageVhdName": "xd-arthur.vhd",
    "userDdcImageName": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/',variables('userImageStorageContainerName'),'/',variables('userDdcImageVhdName'))]",
    "userVdaImageVhdName": "xd-arthur-rdsh.vhd",
    "userVdaImageName": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/',variables('userImageStorageContainerName'),'/',variables('userVdaImageVhdName'))]",

    "availabilitySetName": "availabilitySet",

    "vnetAddressRange": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnet-id": "[concat(resourceId('Microsoft.Network/virtualNetworks','virtualNetwork'), '/subnets/', variables('subnetName'))]",
    "subnetAddressRange": "10.0.0.0/20",

    "domainServerName": "dc",
    "domainServerPrivateIp": "10.0.0.8",
    "domainJoinConfigurationFile": "[concat(variables('artifactsLocation'), '/', 'ADJoin.ps1.zip')]",
    "domainJoinConfigurationFunction": "ADJoin.ps1\\ADJoin",

    "sqlServerName": "sql",
    "sqlImagePublisher": "MicrosoftSQLServer",
    "sqlImageOffer": "SQL2014-WS2012R2",
    "sqlImageSKU": "Standard",
    "sqlJoinConfigurationFile": "[concat(variables('artifactsLocation'), '/', 'SQLJoin.ps1.zip')]",
    "sqlJoinConfigurationFunction": "SQLJoin.ps1\\SQLJoin",

    "ddcServerName": "ddc",
    "ddcServerPrivateIp": "10.0.0.9",
    "siteConfigurationFile": "[concat(variables('artifactsLocation'), '/', 'XDSite.ps1.zip')]",
    "siteConfigurationFunction": "XDSite.ps1\\XDSite",

    "sfServerName": "sf",
    "sfServerPrivateIp": "10.0.0.10",
    "storefrontJoinConfigurationFile": "[concat(variables('artifactsLocation'), '/', 'StorefrontJoin.ps1.zip')]",
    "storefrontJoinConfigurationFunction": "StorefrontJoin.ps1\\StorefrontJoin",

    "licServerName": "lic",
    "licServerPrivateIp": "10.0.0.12",
    "domainCreateConfigurationFile": "[concat(variables('artifactsLocation'), '/', 'ADCreate.ps1.zip')]",
    "domainCreateConfigurationFunction": "ADCreate.ps1\\ADCreate",

    "nsServerName": "ns",
    "nsServerPrivateIp": "10.0.0.11",

    "vdaServerPrefix": "vda",
    "vdaJoinConfigurationFile": "[concat(variables('artifactsLocation'), '/', 'VDAJoin.ps1.zip')]",
    "vdaJoinConfigurationFunction": "VDAJoin.ps1\\VDAJoin",

    "dscVersion": "2.3"
  },

  "resources": [

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "publicIp",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicDnsName')]"
        }
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "dependsOn": [ ],
      "tags": {
        "displayName": "availabilitySet"
      },
      "properties": {
        "platformFaultDomainCount": 2
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "name": "virtualNetwork",
      "type": "Microsoft.Network/virtualNetworks",
      "tags": {
        "displayName": "virtualNetwork"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [ "[variables('vnetAddressRange')]" ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressRange')]"
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "updatevnetdns",
      "dependsOn": [
        "Microsoft.Compute/virtualMachines/dc/extensions/domaincreate"
      ],
      "properties": {
        "mode": "Incremental",

        "template": {
          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2015-05-01-preview",
              "name": "virtualNetwork",
              "type": "Microsoft.Network/virtualNetworks",
              "tags": {
                "displayName": "virtualNetwork"
              },
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('vnetAddressRange')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": [ "10.0.0.8" ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('subnetAddressRange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "name": "loadBalancer",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/publicIPAddresses/publicIp",
        "Microsoft.Network/virtualNetworks/virtualNetwork",
        "Microsoft.Compute/availabilitySets/availabilitySet"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses','publicIp')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "inboundNatRules": [
          {
            "name": "ddcrdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": 1935,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "dcrdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": 49221,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "sqlrdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": 9174,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "nshttp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false
            }
          },
          {
            "name": "nshttps",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 11443,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "dc-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/virtualNetwork",
        "Microsoft.Network/loadBalancers/loadBalancer"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('domainServerPrivateIp')]",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/dcrdp')]"
                }
              ]
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "dc",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces','dc-nic')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "dc",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": "true",
            "enableAutomaticUpdates": "true"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/', resourceGroup().name, 'dc-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "dc-data-disk1",
              "vhd": {
                "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/',resourceGroup().name,'-dc-data-disk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "1000",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','dc-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "domaincreate",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'dc')]"
          ],
          "tags": {
            "displayName": "domaincreate"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.3",
            "settings": {
              "modulesUrl": "[variables('domainCreateConfigurationFile')]",
              "sasToken": "[variables('artifactsLocationSasToken')]",
              "configurationFunction": "[variables('domainCreateConfigurationFunction')]",
              "Properties": {
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                },
                "DomainName": "[parameters('domainName')]"
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "ddc-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer",
        "Microsoft.Network/networkInterfaces/dc-nic"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('ddcServerPrivateIp')]",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/ddcrdp')]"
                }
              ]
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "ddc",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/networkInterfaces/ddc-nic",
        "Microsoft.Compute/virtualMachines/dc/extensions/domaincreate",
        "Microsoft.Resources/deployments/updatevnetdns"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "ddc",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": "true",
            "enableAutomaticUpdates": "true"
          }
        },
        "storageProfile": {
          "osDisk": {
            "name": "osdisk",
            "osType": "Windows",
            "image": {
              "uri": "[variables('userDdcImageName')]"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/',resourceGroup().name,'-ddc-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','ddc-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "domainjoin",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'ddc')]",
            "[resourceId('Microsoft.Compute/virtualMachines', 'sql')]",
            "Microsoft.Compute/virtualMachines/sql/extensions/domainjoin",
            "Microsoft.Compute/virtualMachines/lic/extensions/domainjoin"
          ],
          "tags": {
            "displayName": "domainjoin"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.3",
            "settings": {
              "modulesUrl": "[variables('siteConfigurationFile')]",
              "sasToken": "[variables('artifactsLocationSasToken')]",
              "configurationFunction": "[variables('siteConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "SiteName": "[parameters('siteName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:adminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "adminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "sf-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer",
        "Microsoft.Network/networkInterfaces/dc-nic"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('sfServerPrivateIp')]",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "sf",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/networkInterfaces/sf-nic",
        "Microsoft.Compute/virtualMachines/dc/extensions/domaincreate",
        "Microsoft.Resources/deployments/updatevnetdns"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "sf",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "osdisk",
            "osType": "Windows",
            "image": {
              "uri": "[variables('userDdcImageName')]"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/',resourceGroup().name,'-sf-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','sf-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "domainjoin",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'sf')]",
            "Microsoft.Compute/virtualMachines/ddc/extensions/domainjoin"
          ],
          "tags": {
            "displayName": "domainjoin"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.4",
            "settings": {
              "modulesUrl": "[variables('storefrontJoinConfigurationFile')]",
              "sasToken": "[variables('artifactsLocationSasToken')]",
              "configurationFunction": "[variables('storefrontJoinConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:adminPassword"
                },
                "NetscalerIP": "[variables('nsServerPrivateIp')]",
                "License": "[parameters('encodedNetscalerLicense')]",
                "Certificate": "[parameters('encodedCertificate')]",
                "CertificateKey": "[parameters('encodedCertificateKey')]",
                "AuthorityCertificate1": "[parameters('encodedAuthorityCertificate1')]",
                "AuthorityCertificate2": "[parameters('encodedAuthorityCertificate2')]",
                "DomainController": "[variables('domainServerPrivateIp')]",
                "StorefrontServer": "[variables('sfServerPrivateIp')]",
                "DeliveryController": "[variables('ddcServerPrivateIp')]",
                "VirtualServerName": "SF",
                "VirtualServerPort": 11443,
                "GatewayName": "MyNetscaler",
                "FQDN": "[parameters('fqdn')]"
              }
            },
            "protectedSettings": {
              "Items": {
                "adminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "sql-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer",
        "Microsoft.Network/networkInterfaces/dc-nic"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/sqlrdp')]"
                }
              ]
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "sql",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/networkInterfaces/sql-nic",
        "Microsoft.Compute/virtualMachines/dc/extensions/domaincreate",
        "Microsoft.Resources/deployments/updatevnetdns"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "sql",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": "true",
            "enableAutomaticUpdates": "true"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('sqlImagePublisher')]",
            "offer": "[variables('sqlImageOffer')]",
            "sku": "[variables('sqlImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/',resourceGroup().name,'-sql-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','sql-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "domainjoin",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'sql')]"
          ],
          "tags": {
            "displayName": "domainjoin"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.3",
            "settings": {
              "modulesUrl": "[variables('sqlJoinConfigurationFile')]",
              "sasToken": "[variables('artifactsLocationSasToken')]",
              "configurationFunction": "[variables('sqlJoinConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:adminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "adminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "lic-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer",
        "Microsoft.Network/networkInterfaces/dc-nic"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('licServerPrivateIp')]",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "lic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/networkInterfaces/lic-nic",
        "Microsoft.Compute/virtualMachines/dc/extensions/domaincreate",
        "Microsoft.Resources/deployments/updatevnetdns"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "lic",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "osdisk",
            "osType": "Windows",
            "image": {
              "uri": "[variables('userDdcImageName')]"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/',resourceGroup().name,'-lic-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','lic-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "domainjoin",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'lic')]"
          ],
          "tags": {
            "displayName": "domainjoin"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.3",
            "settings": {
              "modulesUrl": "[variables('domainJoinConfigurationFile')]",
              "sasToken": "[variables('artifactsLocationSasToken')]",
              "configurationFunction": "[variables('domainJoinConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:adminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "adminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "ns-nic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer",
        "Microsoft.Network/virtualNetworks/virtualNetwork"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('nsServerPrivateIp')]",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/nshttp')]"
                },
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/nshttps')]"
                }
              ]
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "ns",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces','ns-nic')]"
      ],
      "plan": {
        "name": "netscalervpxbyol",
        "publisher": "sharefile",
        "product": "netscaler-vpx-bring"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "ctxns",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "sharefile",
            "offer": "netscaler-vpx-bring",
            "sku": "netscalervpxbyol",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/',resourceGroup().name,'-ns-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','ns-nic')]"
            }
          ]
        }
      }
    },

    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('createvdas', copyIndex())]",
      "copy": {
        "name": "vdaLoop",
        "count": 5
      },
      "dependsOn": [
        "Microsoft.Compute/virtualMachines/dc/extensions/domaincreate",
        "Microsoft.Resources/deployments/updatevnetdns"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2015-05-01-preview",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[concat(variables('vdaServerPrefix'),'-nic-', copyIndex())]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[variables('subnet-id')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "apiVersion": "2015-05-01-preview",
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[concat(variables('vdaServerPrefix'), '-', copyIndex())]",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('vdaServerPrefix'), '-nic-', copyIndex())]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[concat(variables('vdaServerPrefix'), '-', copyIndex())]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "name": "osdisk",
                    "osType": "Windows",
                    "image": {
                      "uri": "[variables('userVdaImageName')]"
                    },
                    "vhd": {
                      "uri": "[concat('http://',parameters('vhdStorage'),'.blob.core.windows.net/vhds/',resourceGroup().name, variables('vdaServerPrefix'), '-', copyIndex(),'-osdisk.vhd')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkInterfaces', concat(variables('vdaServerPrefix'), '-nic-', copyIndex()))]"
                    }
                  ]
                }
              },
              "resources": [
                {
                  "type": "extensions",
                  "name": "[concat(variables('vdaServerPrefix'), '-domainjoin-', copyIndex())]",
                  "apiVersion": "2015-05-01-preview",
                  "location": "[resourceGroup().location]",
                  "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/',variables('vdaServerPrefix'), '-', copyIndex())]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Powershell",
                    "type": "DSC",
                    "typeHandlerVersion": "2.3",
                    "settings": {
                      "modulesUrl": "[variables('vdaJoinConfigurationFile')]",
                      "sasToken": "[variables('artifactsLocationSasToken')]",
                      "configurationFunction": "[variables('vdaJoinConfigurationFunction')]",
                      "Properties": {
                        "DomainName": "[parameters('domainName')]",
                        "AdminCreds": {
                          "UserName": "[parameters('adminUsername')]",
                          "Password": "PrivateSettingsRef:adminPassword"
                        },
                        "Controller": "[variables('ddcServerName')]"
                      }
                    },
                    "protectedSettings": {
                      "Items": {
                        "adminPassword": "[parameters('adminPassword')]"
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      }
    }
  ]
}
